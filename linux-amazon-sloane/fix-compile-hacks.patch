mainline: https://github.com/gregkh/linux/blob/v3.10.61/include/net/route.h#L145

diff --git a/include/net/route.h b/include/net/route.h
index 647bb2adb..b5b448755 100644
--- a/include/net/route.h
+++ b/include/net/route.h
@@ -142,7 +142,7 @@ static inline struct rtable *ip_route_output_ports(struct net *net, struct flowi
 	flowi4_init_output(fl4, oif, sk ? sk->sk_mark : 0, tos,
 			   RT_SCOPE_UNIVERSE, proto,
 			   sk ? inet_sk_flowi_flags(sk) : 0,
-			   daddr, saddr, dport, sport, sk ? sock_i_uid(sk) : 0);
+			   daddr, saddr, dport, sport, sock_i_uid(sk));
 	if (sk)
 		security_sk_classify_flow(sk, flowi4_to_flowi(fl4));
 	return ip_route_output_flow(net, fl4, sk);
diff --git a/include/trace/define_trace.h b/include/trace/define_trace.h
index 1905ca8dd..552abc752 100644
--- a/include/trace/define_trace.h
+++ b/include/trace/define_trace.h
@@ -76,7 +76,7 @@
 /* Let the trace headers be reread */
 #define TRACE_HEADER_MULTI_READ
 
-#include TRACE_INCLUDE(TRACE_INCLUDE_FILE)
+// #include TRACE_INCLUDE(TRACE_INCLUDE_FILE)
 
 /* Make all open coded DECLARE_TRACE nops */
 #undef DECLARE_TRACE
diff --git a/drivers/misc/mediatek/kernel/mt_storage_logger.c b/drivers/misc/mediatek/kernel/mt_storage_logger.c
index ebddc7c04..d86b1f0fe 100644
--- a/drivers/misc/mediatek/kernel/mt_storage_logger.c
+++ b/drivers/misc/mediatek/kernel/mt_storage_logger.c
@@ -1774,17 +1774,17 @@ static int __init storage_logger_init(void)
 
 	CREATE_PROC_ENTRY(procEntry, "driver/storage_logger", ACCESS_PERMISSION, NULL,
 			  &driver_base_proc_fops);
-	if (procEntry) {
-		procEntry->gid = 1000;
-	} else
-		SLog_MSG("add /proc/driver/storage_logger entry fail");
+//	if (procEntry) {
+//		procEntry->gid = 1000;
+//	} else
+//		SLog_MSG("add /proc/driver/storage_logger entry fail");
 
 	CREATE_PROC_ENTRY(procEntry, "driver/storage_logger_config", ACCESS_PERMISSION, NULL,
 			  &driver_config_proc_fops);
-	if (procEntry) {
-		procEntry->gid = 1000;
-	} else
-		SLog_MSG("add /proc/driver/storage_logger_config entry fail");
+//	if (procEntry) {
+//		procEntry->gid = 1000;
+//	} else
+//		SLog_MSG("add /proc/driver/storage_logger_config entry fail");
 
 	CREATE_PROC_ENTRY(procEntry, "driver/usb_logger_config", ACCESS_PERMISSION, NULL,
 			  &driver_usb_config_proc_fops);
@@ -1794,40 +1794,40 @@ static int __init storage_logger_init(void)
 	/* Thermal Log */
 	CREATE_PROC_ENTRY(procEntry, "driver/thermal_logger_config", ACCESS_PERMISSION, NULL,
 			  &driver_thermal_config_proc_fops);
-	if (procEntry) {
-		procEntry->gid = 1000;
-	} else
-		SLog_MSG("add /proc/driver/thermal_logger_config entry fail");
+//	if (procEntry) {
+//		procEntry->gid = 1000;
+//	} else
+//		SLog_MSG("add /proc/driver/thermal_logger_config entry fail");
 
 	CREATE_PROC_ENTRY(procEntry, "driver/storage_logger_display", ACCESS_PERMISSION, NULL,
 			  &storage_logger_proc_fops);
-	if (procEntry) {
-		procEntry->gid = 1000;
-	} else
-		SLog_MSG("add /proc/driver/storage_logger entry fail");
+//	if (procEntry) {
+//		procEntry->gid = 1000;
+//	} else
+//		SLog_MSG("add /proc/driver/storage_logger entry fail");
 
 #if defined(FEATURE_STORAGE_PERF_INDEX)
 
 	CREATE_PROC_ENTRY(procEntry, "driver/mtk_io_osd_config", ACCESS_PERMISSION, NULL,
 			  &mtk_io_osd_config_proc_fops);
-	if (procEntry) {
-		procEntry->gid = 1000;
-	} else
-		SLog_MSG("add /proc/driver/mtk_io_osd entry fail");
+//	if (procEntry) {
+//		procEntry->gid = 1000;
+//	} else
+//		SLog_MSG("add /proc/driver/mtk_io_osd entry fail");
 
 	CREATE_PROC_ENTRY(procEntry, "driver/mtk_io_osd_mmcqd1", ACCESS_PERMISSION, NULL,
 			  &mtk_io_osd_mmcqd1_proc_fops);
-	if (procEntry) {
-		procEntry->gid = 1000;
-	} else
-		SLog_MSG("add /proc/driver/mtk_io_osd entry fail");
+//	if (procEntry) {
+//		procEntry->gid = 1000;
+//	} else
+//		SLog_MSG("add /proc/driver/mtk_io_osd entry fail");
 
 	CREATE_PROC_ENTRY(procEntry, "driver/mtk_io_osd_mmcqd2", ACCESS_PERMISSION, NULL,
 			  &mtk_io_osd_mmcqd2_proc_fops);
-	if (procEntry) {
-		procEntry->gid = 1000;
-	} else
-		SLog_MSG("add /proc/driver/mtk_io_osd entry fail");
+//	if (procEntry) {
+//		procEntry->gid = 1000;
+//	} else
+//		SLog_MSG("add /proc/driver/mtk_io_osd entry fail");
 
 #endif
 	/* Initialize the variable used in this module */
@@ -1879,9 +1879,9 @@ static int __init storage_logger_init(void)
 			  &driver_dump_proc_fops);
 	CREATE_PROC_ENTRY(procEntry, "driver/storage_logger_bufsize_malloc", ACCESS_PERMISSION,
 			  NULL, &driver_bufsize_proc_fops);
-	if (procEntry) {
-		procEntry->gid = 1000;
-	}
+//	if (procEntry) {
+//		procEntry->gid = 1000;
+//	}
 
 	CREATE_PROC_ENTRY(procEntry, "driver/storage_logger_filename", ACCESS_PERMISSION, NULL,
 			  &driver_filename_proc_fops);
diff --git a/drivers/misc/mediatek/mach/mt8173/mt_cpufreq.c b/drivers/misc/mediatek/mach/mt8173/mt_cpufreq.c
index d92d5b418..9d7a3ade8 100644
--- a/drivers/misc/mediatek/mach/mt8173/mt_cpufreq.c
+++ b/drivers/misc/mediatek/mach/mt8173/mt_cpufreq.c
@@ -5794,7 +5794,7 @@ static int _create_procfs(void)
 	}
 
 	/* set the group of /proc/cpufreq for surfaceflinger */
-	proc_set_user(dir, 0, 1003);
+//	proc_set_user(dir, 0, 1003);
 
 	for (i = 0; i < ARRAY_SIZE(entries); i++) {
 		if (!proc_create
@@ -5819,18 +5819,18 @@ static int _create_procfs(void)
 		}
 
 		/* set the group of /proc/cpufreq/cpu_dirs for surfaceflinger */
-		proc_set_user(cpu_dir, 0, 1003);
+//		proc_set_user(cpu_dir, 0, 1003);
 
 		for (i = 0; i < ARRAY_SIZE(cpu_entries); i++) {
 			cpu_file = proc_create_data
 				(cpu_entries[i].name, S_IRUGO | S_IWUSR | S_IWGRP, cpu_dir,
 				 cpu_entries[i].fops, p);
-			if (cpu_file)
-				/* set the group of /proc/cpufreq/cpu_dirs/files for surfaceflinger */
-				proc_set_user(cpu_file, 0, 1003);
-			else
-				cpufreq_err("%s(), create /proc/cpufreq/%s/%s failed\n", __func__,
-						p->name, entries[i].name);
+//			if (cpu_file)
+//				/* set the group of /proc/cpufreq/cpu_dirs/files for surfaceflinger */
+//				proc_set_user(cpu_file, 0, 1003);
+//			else
+//				cpufreq_err("%s(), create /proc/cpufreq/%s/%s failed\n", __func__,
+//						p->name, entries[i].name);
 		}
 	}
 
diff --git a/drivers/misc/mediatek/mmc-host/mt8173/dbg.c b/drivers/misc/mediatek/mmc-host/mt8173/dbg.c
index 94eb648ed..e72fc98ce 100644
--- a/drivers/misc/mediatek/mmc-host/mt8173/dbg.c
+++ b/drivers/misc/mediatek/mmc-host/mt8173/dbg.c
@@ -3101,7 +3101,7 @@ int msdc_debug_proc_init(void)
 #endif
 	if (prEntry) {
 		pr_err("[%s]: successfully create /proc/msdc_debug\n", __func__);
-		proc_set_user(prEntry, 0, 1001);
+//		proc_set_user(prEntry, 0, 1001);
 	} else {
 		pr_err("[%s]: failed to create /proc/msdc_debug\n", __func__);
 	}
@@ -3148,7 +3148,7 @@ int msdc_debug_proc_init(void)
 	tune = proc_create("msdc_tune", 0460, NULL, &msdc_tune_fops);
 #endif
 	if (tune) {
-		proc_set_user(tune, 0, 1001);
+//		proc_set_user(tune, 0, 1001);
 		pr_err("[%s]: successfully create /proc/msdc_tune\n", __func__);
 	} else {
 		pr_err("[%s]: failed to create /proc/msdc_tune\n", __func__);
diff --git a/drivers/pinctrl/mediatek/pinctrl-mtk-mt8173.h b/drivers/pinctrl/mediatek/pinctrl-mtk-mt8173.h
index 7ac3fa575..fd33c2eec 100644
--- a/drivers/pinctrl/mediatek/pinctrl-mtk-mt8173.h
+++ b/drivers/pinctrl/mediatek/pinctrl-mtk-mt8173.h
@@ -16,7 +16,7 @@
 #define __PINCTRL_MTK_MT8173_H
 
 #include <linux/pinctrl/pinctrl.h>
-#include <pinctrl-mtk-common.h>
+#include "pinctrl-mtk-common.h"
 
 static const struct mtk_desc_pin mtk_pins_mt8173[] = {
 	MTK_PIN(
diff --git a/include/trace/ftrace.h b/include/trace/ftrace.h
index dbb47418d..ae2c013e6 100644
--- a/include/trace/ftrace.h
+++ b/include/trace/ftrace.h
@@ -86,7 +86,7 @@
 #define TRACE_EVENT_FLAGS(name, value)					\
 	__TRACE_EVENT_FLAGS(name, value)
 
-#include TRACE_INCLUDE(TRACE_INCLUDE_FILE)
+// #include TRACE_INCLUDE(TRACE_INCLUDE_FILE)
 
 
 /*
@@ -136,7 +136,7 @@
 #undef TRACE_EVENT_FLAGS
 #define TRACE_EVENT_FLAGS(event, flag)
 
-#include TRACE_INCLUDE(TRACE_INCLUDE_FILE)
+// #include TRACE_INCLUDE(TRACE_INCLUDE_FILE)
 
 /*
  * Stage 3 of the trace events.
@@ -221,68 +221,68 @@
 #undef __print_hex
 #define __print_hex(buf, buf_len) ftrace_print_hex_seq(p, buf, buf_len)
 
-#undef DECLARE_EVENT_CLASS
-#define DECLARE_EVENT_CLASS(call, proto, args, tstruct, assign, print)	\
-static notrace enum print_line_t					\
-ftrace_raw_output_##call(struct trace_iterator *iter, int flags,	\
-			 struct trace_event *trace_event)		\
-{									\
-	struct trace_seq *s = &iter->seq;				\
-	struct trace_seq __maybe_unused *p = &iter->tmp_seq;		\
-	struct ftrace_raw_##call *field;				\
-	int ret;							\
-									\
-	field = (typeof(field))iter->ent;				\
-									\
-	ret = ftrace_raw_output_prep(iter, trace_event);		\
-	if (ret)							\
-		return ret;						\
-									\
-	ret = trace_seq_printf(s, print);				\
-	if (!ret)							\
-		return TRACE_TYPE_PARTIAL_LINE;				\
-									\
-	return TRACE_TYPE_HANDLED;					\
-}									\
-static struct trace_event_functions ftrace_event_type_funcs_##call = {	\
-	.trace			= ftrace_raw_output_##call,		\
-};
-
-#undef DEFINE_EVENT_PRINT
-#define DEFINE_EVENT_PRINT(template, call, proto, args, print)		\
-static notrace enum print_line_t					\
-ftrace_raw_output_##call(struct trace_iterator *iter, int flags,	\
-			 struct trace_event *event)			\
-{									\
-	struct trace_seq *s = &iter->seq;				\
-	struct ftrace_raw_##template *field;				\
-	struct trace_entry *entry;					\
-	struct trace_seq *p = &iter->tmp_seq;				\
-	int ret;							\
-									\
-	entry = iter->ent;						\
-									\
-	if (entry->type != event_##call.event.type) {			\
-		WARN_ON_ONCE(1);					\
-		return TRACE_TYPE_UNHANDLED;				\
-	}								\
-									\
-	field = (typeof(field))entry;					\
-									\
-	trace_seq_init(p);						\
-	ret = trace_seq_printf(s, "%s: ", #call);			\
-	if (ret)							\
-		ret = trace_seq_printf(s, print);			\
-	if (!ret)							\
-		return TRACE_TYPE_PARTIAL_LINE;				\
-									\
-	return TRACE_TYPE_HANDLED;					\
-}									\
-static struct trace_event_functions ftrace_event_type_funcs_##call = {	\
-	.trace			= ftrace_raw_output_##call,		\
-};
-
-#include TRACE_INCLUDE(TRACE_INCLUDE_FILE)
+// #undef DECLARE_EVENT_CLASS
+// #define DECLARE_EVENT_CLASS(call, proto, args, tstruct, assign, print)	\
+// static notrace enum print_line_t					\
+// ftrace_raw_output_##call(struct trace_iterator *iter, int flags,	\
+// 			 struct trace_event *trace_event)		\
+// {									\
+// 	struct trace_seq *s = &iter->seq;				\
+// 	struct trace_seq __maybe_unused *p = &iter->tmp_seq;		\
+// 	struct ftrace_raw_##call *field;				\
+// 	int ret;							\
+// 									\
+// 	field = (typeof(field))iter->ent;				\
+// 									\
+// 	ret = ftrace_raw_output_prep(iter, trace_event);		\
+// 	if (ret)							\
+// 		return ret;						\
+// 									\
+// 	ret = trace_seq_printf(s, print);				\
+// 	if (!ret)							\
+// 		return TRACE_TYPE_PARTIAL_LINE;				\
+// 									\
+// 	return TRACE_TYPE_HANDLED;					\
+// }									\
+// static struct trace_event_functions ftrace_event_type_funcs_##call = {	\
+// 	.trace			= ftrace_raw_output_##call,		\
+// };
+
+// #undef DEFINE_EVENT_PRINT
+// #define DEFINE_EVENT_PRINT(template, call, proto, args, print)		\
+// static notrace enum print_line_t					\
+// ftrace_raw_output_##call(struct trace_iterator *iter, int flags,	\
+// 			 struct trace_event *event)			\
+// {									\
+// 	struct trace_seq *s = &iter->seq;				\
+// 	struct ftrace_raw_##template *field;				\
+// 	struct trace_entry *entry;					\
+// 	struct trace_seq *p = &iter->tmp_seq;				\
+// 	int ret;							\
+// 									\
+// 	entry = iter->ent;						\
+// 									\
+// 	if (entry->type != event_##call.event.type) {			\
+// 		WARN_ON_ONCE(1);					\
+// 		return TRACE_TYPE_UNHANDLED;				\
+// 	}								\
+// 									\
+// 	field = (typeof(field))entry;					\
+// 									\
+// 	trace_seq_init(p);						\
+// 	ret = trace_seq_printf(s, "%s: ", #call);			\
+// 	if (ret)							\
+// 		ret = trace_seq_printf(s, print);			\
+// 	if (!ret)							\
+// 		return TRACE_TYPE_PARTIAL_LINE;				\
+// 									\
+// 	return TRACE_TYPE_HANDLED;					\
+// }									\
+// static struct trace_event_functions ftrace_event_type_funcs_##call = {	\
+// 	.trace			= ftrace_raw_output_##call,		\
+// };
+
+// #include TRACE_INCLUDE(TRACE_INCLUDE_FILE)
 
 #undef __field_ext
 #define __field_ext(type, item, filter_type)				\
@@ -339,7 +339,7 @@ ftrace_define_fields_##call(struct ftrace_event_call *event_call)	\
 #define DEFINE_EVENT_PRINT(template, name, proto, args, print)	\
 	DEFINE_EVENT(template, name, PARAMS(proto), PARAMS(args))
 
-#include TRACE_INCLUDE(TRACE_INCLUDE_FILE)
+// #include TRACE_INCLUDE(TRACE_INCLUDE_FILE)
 
 /*
  * remember the offset of each array from the beginning of the event.
@@ -388,7 +388,7 @@ static inline notrace int ftrace_get_offsets_##call(			\
 #define DEFINE_EVENT_PRINT(template, name, proto, args, print)	\
 	DEFINE_EVENT(template, name, PARAMS(proto), PARAMS(args))
 
-#include TRACE_INCLUDE(TRACE_INCLUDE_FILE)
+// #include TRACE_INCLUDE(TRACE_INCLUDE_FILE)
 
 /*
  * Stage 4 of the trace events.
@@ -560,7 +560,7 @@ static inline void ftrace_test_probe_##call(void)			\
 #undef DEFINE_EVENT_PRINT
 #define DEFINE_EVENT_PRINT(template, name, proto, args, print)
 
-#include TRACE_INCLUDE(TRACE_INCLUDE_FILE)
+// #include TRACE_INCLUDE(TRACE_INCLUDE_FILE)
 
 #undef __entry
 #define __entry REC
@@ -614,7 +614,7 @@ static struct ftrace_event_call __used event_##call = {			\
 static struct ftrace_event_call __used					\
 __attribute__((section("_ftrace_events"))) *__event_##call = &event_##call
 
-#include TRACE_INCLUDE(TRACE_INCLUDE_FILE)
+// #include TRACE_INCLUDE(TRACE_INCLUDE_FILE)
 
 
 #ifdef CONFIG_PERF_EVENTS
@@ -699,6 +699,6 @@ static inline void perf_test_probe_##call(void)				\
 #define DEFINE_EVENT_PRINT(template, name, proto, args, print)	\
 	DEFINE_EVENT(template, name, PARAMS(proto), PARAMS(args))
 
-#include TRACE_INCLUDE(TRACE_INCLUDE_FILE)
+// #include TRACE_INCLUDE(TRACE_INCLUDE_FILE)
 #endif /* CONFIG_PERF_EVENTS */
 
diff --git a/drivers/misc/mediatek/mach/mt8173/mt_hotplug_strategy_procfs.c b/drivers/misc/mediatek/mach/mt8173/mt_hotplug_strategy_procfs.c
index d5aae4bfb..11033f22d 100644
--- a/drivers/misc/mediatek/mach/mt8173/mt_hotplug_strategy_procfs.c
+++ b/drivers/misc/mediatek/mach/mt8173/mt_hotplug_strategy_procfs.c
@@ -1091,8 +1091,8 @@ int hps_procfs_init(void)
 	hps_warn("hps_procfs_init\n");
 
 	hps_dir = proc_mkdir("hps", NULL);
-	/* set the group of /proc/hps for surfaceflinger */
-	proc_set_user(hps_dir, 0, 1003);
+//	/* set the group of /proc/hps for surfaceflinger */
+//	proc_set_user(hps_dir, 0, 1003);
 	if (hps_dir == NULL) {
 		hps_emerg("mkdir /proc/hps fail\n");
 		return -1;
@@ -1101,12 +1101,12 @@ int hps_procfs_init(void)
 			hps_file = proc_create(entries[i].name,
 									S_IRUGO | S_IWUSR | S_IWGRP,
 									hps_dir, entries[i].fops);
-			if (hps_file)
-				/* set the group of /proc/hps for surfaceflinger */
-				proc_set_user(hps_file, 0, 1003);
-			else
-				hps_emerg("create /proc/hps/%s failed\n",
-					entries[i].name);
+//			if (hps_file)
+//				/* set the group of /proc/hps for surfaceflinger */
+//				proc_set_user(hps_file, 0, 1003);
+//			else
+//				hps_emerg("create /proc/hps/%s failed\n",
+//					entries[i].name);
 		}
 	}
 
diff --git a/drivers/pinctrl/mediatek/pinctrl-mtk-mt6397.h b/drivers/pinctrl/mediatek/pinctrl-mtk-mt6397.h
index f33e4473c..9d0a29cba 100644
--- a/drivers/pinctrl/mediatek/pinctrl-mtk-mt6397.h
+++ b/drivers/pinctrl/mediatek/pinctrl-mtk-mt6397.h
@@ -16,7 +16,7 @@
 #define __PINCTRL_MTK_MT6397_H
 
 #include <linux/pinctrl/pinctrl.h>
-#include <pinctrl-mtk-common.h>
+#include "pinctrl-mtk-common.h"
 
 static const struct mtk_desc_pin mtk_pins_mt6397[] = {
 	MTK_PIN(
diff --git a/net/ipv4/route.c b/net/ipv4/route.c
index 577801102..71871be3c 100644
--- a/net/ipv4/route.c
+++ b/net/ipv4/route.c
@@ -532,7 +532,7 @@ static void __build_flow_key(struct flowi4 *fl4, struct sock *sk,
 			   RT_SCOPE_UNIVERSE, prot,
 			   flow_flags,
 			   iph->daddr, iph->saddr, 0, 0,
-			   sk ? sock_i_uid(sk) : 0);
+			   sock_i_uid(sk));
 }
 
 static void build_skb_flow_key(struct flowi4 *fl4, const struct sk_buff *skb,
diff --git a/drivers/misc/mediatek/thermal/mtk_thermal_monitor.c b/drivers/misc/mediatek/thermal/mtk_thermal_monitor.c
index f964d36af..ba9d4e188 100644
--- a/drivers/misc/mediatek/thermal/mtk_thermal_monitor.c
+++ b/drivers/misc/mediatek/thermal/mtk_thermal_monitor.c
@@ -1619,8 +1619,9 @@ static int __init mtkthermal_init(void)
 	if (!entry) {
 		THRML_ERROR_LOG
 		    ("[mtkthermal_init] Can not create mtm_monitor\n");
-	} else
-		proc_set_user(entry, 0, 1000);
+	}
+//	} else
+//		proc_set_user(entry, 0, 1000);
 
 	entry =
 	    proc_create("mtm_indicator", S_IRUGO | S_IWUSR, dir_entry,
@@ -1635,8 +1636,9 @@ static int __init mtkthermal_init(void)
 			&_mtm_scen_call_fops);
 	if (!entry) {
 		THRML_ERROR_LOG("[mtkthermal_init] Can not create /proc/driver/mtm_scen_call\n");
-	} else
-		proc_set_user(entry, 0, 1000);
+	}
+//	} else
+//		proc_set_user(entry, 0, 1000);
 
 	/* create /proc/cooler folder */
 	/* WARNING! This is not gauranteed to be invoked before mtk_ts_cpu's functions... */
@@ -2186,11 +2188,11 @@ struct thermal_zone_device *mtk_thermal_zone_device_register_wrapper
 			    ("[mtk_thermal_zone_device_register_wrapper] proc file not created: %d\n",
 			     tz);
 		} else {
-#if LINUX_VERSION_CODE >= KERNEL_VERSION(3, 10, 0)
-			proc_set_user(entry, 0, 1000);
-#else
-			entry->gid = 1000;
-#endif
+//#if LINUX_VERSION_CODE >= KERNEL_VERSION(3, 10, 0)
+//			proc_set_user(entry, 0, 1000);
+//#else
+//			entry->gid = 1000;
+//#endif
 			THRML_LOG
 			    ("[mtk_thermal_zone_device_register_wrapper] proc file created: %d\n",
 			     tz);
@@ -2497,11 +2499,11 @@ struct thermal_cooling_device *mtk_thermal_cooling_device_register_wrapper
 			    ("[mtk_thermal_cooling_device_register] proc file not created: %d\n",
 			     mcdata);
 		} else {
-#if LINUX_VERSION_CODE >= KERNEL_VERSION(3, 10, 0)
-			proc_set_user(entry, 0, 1000);
-#else
-			entry->gid = 1000;
-#endif
+//#if LINUX_VERSION_CODE >= KERNEL_VERSION(3, 10, 0)
+//			proc_set_user(entry, 0, 1000);
+//#else
+//			entry->gid = 1000;
+//#endif
 			THRML_LOG("[mtk_thermal_cooling_device_register] proc file created: %d\n",
 				  mcdata);
 		}
diff --git a/drivers/thermal/virtual_sensor_cpu_hotplug_cooling.c b/drivers/thermal/virtual_sensor_cpu_hotplug_cooling.c
index 02cfbb9f4..17fd8d5d1 100644
--- a/drivers/thermal/virtual_sensor_cpu_hotplug_cooling.c
+++ b/drivers/thermal/virtual_sensor_cpu_hotplug_cooling.c
@@ -29,7 +29,7 @@
 #include <linux/cpu_hotplug_cooling.h>
 #include <linux/device.h>
 #include <linux/thermal.h>
-#include <thermal_core.h>
+#include "thermal_core.h"
 
 static struct thermal_cooling_device *cdev[NR_CPUS];
 
diff --git a/drivers/misc/mediatek/videox/mt8173/video_proc.c b/drivers/misc/mediatek/videox/mt8173/video_proc.c
index 258dd9a7e..7afb09c83 100644
--- a/drivers/misc/mediatek/videox/mt8173/video_proc.c
+++ b/drivers/misc/mediatek/videox/mt8173/video_proc.c
@@ -81,7 +81,7 @@ static int __init video_proc_init(void)
 		pr_crit("fail to create /proc/video @ %s()\n", __func__);
 		return -ENOMEM;
 	}
-	proc_set_user(dir, 0, 1003);
+//	proc_set_user(dir, 0, 1003);
 
 	file = proc_create("is_4k_video", S_IRUGO | S_IWUSR | S_IWGRP, dir,
 						&is_4k_video_proc_fops);
@@ -89,7 +89,7 @@ static int __init video_proc_init(void)
 		pr_crit("%s(), create /proc/video/is_4k_video failed\n", __func__);
 		return -ENOMEM;
 	}
-	proc_set_user(file, 0, 1003);
+//	proc_set_user(file, 0, 1003);
 
 	return ret;
 }
diff --git a/drivers/staging/android/ion/ion.c b/drivers/staging/android/ion/ion.c
index 543af22fb..db15143bc 100755
--- a/drivers/staging/android/ion/ion.c
+++ b/drivers/staging/android/ion/ion.c
@@ -45,6 +45,7 @@
 #include "ion_profile.h"
 
 #if ION_DEBUG
+#include "ion.h"
 #include <linux/ion_drv.h>
 #include "ion_debug.h"
 #include "ion_debug_db.h"
diff --git a/drivers/staging/android/ion/ion_priv.h b/drivers/staging/android/ion/ion_priv.h
index c1239c2f8..ef00bdb84 100644
--- a/drivers/staging/android/ion/ion_priv.h
+++ b/drivers/staging/android/ion/ion_priv.h
@@ -28,6 +28,7 @@
 #include <linux/types.h>
 #include <linux/miscdevice.h>
 #include <linux/idr.h>
+#include "ion.h"
 #include <linux/ion_drv.h>
 
 struct ion_buffer *ion_handle_buffer(struct ion_handle *handle);
diff --git a/include/linux/ion_drv.h b/include/linux/ion_drv.h
index 8bce4d38a..4d209f5e8 100644
--- a/include/linux/ion_drv.h
+++ b/include/linux/ion_drv.h
@@ -2,7 +2,7 @@
 #define __ION_DRV_H__
 #include <linux/version.h>
 
-#include <ion.h>
+// #include <ion.h>
 
 #include <linux/ion_debugger.h>
 /* Structure definitions */
diff --git a/net/netfilter/xt_quota2.c b/net/netfilter/xt_quota2.c
index 44564dfd8..7f2276fb2 100644
--- a/net/netfilter/xt_quota2.c
+++ b/net/netfilter/xt_quota2.c
@@ -231,7 +231,7 @@ q2_get_counter(const struct xt_quota_mtinfo2 *q)
 		spin_unlock_bh(&counter_list_lock);
 		goto out;
 	}
-	proc_set_user(p, quota_list_uid, quota_list_gid);
+//	proc_set_user(p, quota_list_uid, quota_list_gid);
 	return e;
 
  out:
diff --git a/drivers/misc/mediatek/ext_disp/mt8173/extd_ddp.c b/drivers/misc/mediatek/ext_disp/mt8173/extd_ddp.c
index 7a7d585f6..55c92cac3 100644
--- a/drivers/misc/mediatek/ext_disp/mt8173/extd_ddp.c
+++ b/drivers/misc/mediatek/ext_disp/mt8173/extd_ddp.c
@@ -34,6 +34,8 @@
 #include "disp_session.h"
 #include "display_recorder.h"
 
+#include "../../../../drivers/staging/android/uapi/ion.h"
+#include "../../../../drivers/staging/android/ion/ion.h"
 #include <linux/ion_drv.h>
 #include <linux/slab.h>
 #include <linux/mtk_ion.h>
diff --git a/drivers/staging/android/ion/mtk/ion_mm_carveout_heap.c b/drivers/staging/android/ion/mtk/ion_mm_carveout_heap.c
index 76c4d4e42..124c8209d 100644
--- a/drivers/staging/android/ion/mtk/ion_mm_carveout_heap.c
+++ b/drivers/staging/android/ion/mtk/ion_mm_carveout_heap.c
@@ -18,6 +18,8 @@
 #include <linux/err.h>
 #include <linux/genalloc.h>
 #include <linux/io.h>
+#include "../../../../drivers/staging/android/uapi/ion.h"
+#include "../../../../drivers/staging/android/ion/ion.h"
 #include <linux/ion_drv.h>
 #include <linux/mtk_ion.h>
 #include <linux/mm.h>
diff --git a/drivers/misc/mediatek/ext_disp/mt8173/extd_fence.c b/drivers/misc/mediatek/ext_disp/mt8173/extd_fence.c
index d0c11b21d..9889361bf 100644
--- a/drivers/misc/mediatek/ext_disp/mt8173/extd_fence.c
+++ b/drivers/misc/mediatek/ext_disp/mt8173/extd_fence.c
@@ -1,5 +1,7 @@
 #include <linux/xlog.h>
 #include "extd_drv_log.h"
+#include "../../../../drivers/staging/android/uapi/ion.h"
+#include "../../../../drivers/staging/android/ion/ion.h"
 #include <linux/ion_drv.h>
 #include <linux/slab.h>
 #include <linux/wait.h>
diff --git a/drivers/misc/mediatek/videox/mt8173/mtkfb_fence.c b/drivers/misc/mediatek/videox/mt8173/mtkfb_fence.c
index 6f277d528..1379fcdbd 100644
--- a/drivers/misc/mediatek/videox/mt8173/mtkfb_fence.c
+++ b/drivers/misc/mediatek/videox/mt8173/mtkfb_fence.c
@@ -1,5 +1,7 @@
 #include <linux/xlog.h>
 #include "disp_drv_log.h"
+#include "../../../../drivers/staging/android/uapi/ion.h"
+#include "../../../../drivers/staging/android/ion/ion.h"
 #include <linux/ion_drv.h>
 #include <linux/slab.h>
 #include <linux/wait.h>
diff --git a/drivers/misc/mediatek/videox/mt8173/primary_display.c b/drivers/misc/mediatek/videox/mt8173/primary_display.c
index b922b96cf..cb40d40c4 100644
--- a/drivers/misc/mediatek/videox/mt8173/primary_display.c
+++ b/drivers/misc/mediatek/videox/mt8173/primary_display.c
@@ -52,6 +52,8 @@
 #include <mach/mt_gpio.h>
 #include "disp_session.h"
 #include "disp_drv_platform.h"
+#include "../../../../drivers/staging/android/uapi/ion.h"
+#include "../../../../drivers/staging/android/ion/ion.h"
 #include <linux/ion_drv.h>
 #include <linux/slab.h>
 #include <linux/mtk_ion.h>
